{"version":3,"file":"static/js/392.76287681.chunk.js","mappings":"uKACA,QAA+B,kCAA/B,EAA2E,6BAA3E,EAAoH,+BAApH,EAAsK,sCAAtK,EAAkO,yCAAlO,EAA8R,sCAA9R,EAAqV,oCAArV,EAAsY,gCAAtY,EAAqb,kC,6FCY9a,MAAMA,EAAiBC,IAAuC,IAAtC,QAAEC,EAAO,SAAEC,EAAQ,GAAEC,GAAWH,EAC7D,MAAMI,GAAUC,EAAAA,EAAAA,MACVC,GAASC,EAAAA,EAAAA,IAAc,SAAU,MACjCC,GAAUC,EAAAA,EAAAA,KAAeC,GAASA,EAAMC,UAAUC,eAClDC,GAAWC,EAAAA,EAAAA,MAEXC,EAAeA,KACnBT,EACEO,GAASG,EAAAA,EAAAA,IAAeb,IAExBC,EAAQ,aACT,EAGH,IAAIa,EAAkBA,KACpBJ,GAASK,EAAAA,EAAAA,IAAoBf,GAAI,EAGnC,MAAMgB,EAA4BA,IAC5BX,EAAQY,SAASjB,IACZkB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACrB,QAASgB,EAAgBf,SAAC,gBAElCmB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACrB,QAASc,EAAab,SAAC,aAI1C,OACEmB,EAAAA,EAAAA,KAACF,EAAyB,GAAG,ECMjC,EApCoBI,KAClB,MAAMC,GAASC,EAAAA,EAAAA,MAET,KAAEC,EAAI,UAAEC,IAAcC,EAAAA,EAAAA,IAAuBJ,EAAOK,QACpDC,EAASJ,EACTK,GAAUP,EAAOK,OAEvB,OAAIF,GACKN,EAAAA,EAAAA,KAACW,EAAAA,EAAS,KAIjBC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAqBjC,SAAA,EACnCmB,EAAAA,EAAAA,KAAA,MAAIa,UAAWC,EAAyBjC,SAAE4B,EAAOM,QACjDH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAgBjC,SAAA,EAC9BmB,EAAAA,EAAAA,KAAA,OAAKa,UAAWC,EAA0BE,IAAKP,EAAOQ,MAAOC,IAAI,eACjEN,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBjC,SAAA,EAChCmB,EAAAA,EAAAA,KAAA,MAAIa,UAAWC,EAA4BjC,SAAC,kBAC5CmB,EAAAA,EAAAA,KAAA,MAAIa,UAAWC,EAAuBjC,SACnC4B,EAAOU,YAAYC,KAAKC,IACvBrB,EAAAA,EAAAA,KAAA,MAA0Ba,UAAWC,EAAmBjC,SAAEwC,GAAjDA,EAAKC,iBAGlBtB,EAAAA,EAAAA,KAAA,MAAIa,UAAWC,EAA4BjC,SAAC,mBAC5CmB,EAAAA,EAAAA,KAAA,MAAIa,UAAWC,EAAuBjC,SACnC4B,EAAOc,aAAaH,KAAKC,IACxBrB,EAAAA,EAAAA,KAAA,MAA0Ba,UAAWC,EAAqBjC,SAAEwC,GAAnDA,EAAKC,oBAIpBtB,EAAAA,EAAAA,KAACtB,EAAc,CAACI,GAAI4B,SAElB,C","sources":["webpack://collection-of-recipes-react/./src/componets/cards/description.module.css?ccc1","componets/button/ButtonFavorite.tsx","componets/cards/Description.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptions\":\"description_descriptions__PwcRk\",\"wrapper\":\"description_wrapper__zOXbu\",\"rightSide\":\"description_rightSide__BdOlD\",\"descriptionTitle\":\"description_descriptionTitle__C6U1G\",\"descriptionSubTitle\":\"description_descriptionSubTitle__q0drU\",\"descriptionImage\":\"description_descriptionImage__nMvR6\",\"ingredientList\":\"description_ingredientList__bxA6v\",\"ingredient\":\"description_ingredient__rSVlK\",\"instructions\":\"description_instructions__gljfk\"};","import { useDispatch } from 'react-redux';\r\nimport { Button } from './Button';\r\nimport { addToFavorites, removeFromFavorites } from '../../redux/favorites-reducer';\r\nimport { useAppSelector } from '../../hooks/hooks';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getDataFromLS } from '../../utils/localStorage';\r\n\r\ntype Props = {\r\n  children?: React.ReactNode;\r\n  onClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n  id: number;\r\n};\r\n\r\nexport const ButtonFavorite = ({ onClick, children, id }: Props) => {\r\n  const toLogin = useNavigate();\r\n  const isAuth = getDataFromLS('isAuth', '\"\"');\r\n  const stateId = useAppSelector(state => state.favorites.favoritesIds);\r\n  const dispatch = useDispatch();\r\n\r\n  const addFavorites = () => {\r\n    isAuth ? (\r\n      dispatch(addToFavorites(id))\r\n    ) : (\r\n      toLogin('/loginPage')\r\n    )\r\n  }\r\n\r\n  let removeFavorites = () => {\r\n    dispatch(removeFromFavorites(id));\r\n  }\r\n\r\n  const RenderFavoritesControlBtn = () => {\r\n    if (stateId.includes(id)) {\r\n      return <Button onClick={removeFavorites}>Unfavorite</Button>\r\n    } else {\r\n      return <Button onClick={addFavorites}>Favorite</Button>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <RenderFavoritesControlBtn />\r\n  )\r\n}","import classes from './description.module.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useGetDescriptionQuery } from '../../api/recipesApi';\r\nimport { Preloader } from '../common/Preloader';\r\nimport { ButtonFavorite } from '../button/ButtonFavorite';\r\n\r\ntype Params = {\r\n  userId: string;\r\n};\r\n\r\nconst Description = () => {\r\n  const params = useParams() as Params;\r\n\r\n  const { data, isLoading } = useGetDescriptionQuery(params.userId);\r\n  const recipe = data!;\r\n  const cardId = +params.userId;\r\n\r\n  if (isLoading) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.descriptions}>\r\n      <h1 className={classes.descriptionTitle}>{recipe.name}</h1>\r\n      <div className={classes.wrapper}>\r\n        <img className={classes.descriptionImage} src={recipe.image} alt=\"cardImage\" />\r\n        <div className={classes.rightSide}>\r\n          <h2 className={classes.descriptionSubTitle}>Ingredients:</h2>\r\n          <ul className={classes.ingredientList}  >\r\n            {recipe.ingredients.map((item: string) => (\r\n              <li key={item.toString()} className={classes.ingredient}>{item}</li>\r\n            ))}\r\n          </ul>\r\n          <h2 className={classes.descriptionSubTitle}>Instructions:</h2>\r\n          <ul className={classes.ingredientList}>\r\n            {recipe.instructions.map((item: string) => (\r\n              <li key={item.toString()} className={classes.instructions}>{item}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <ButtonFavorite id={cardId}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Description;"],"names":["ButtonFavorite","_ref","onClick","children","id","toLogin","useNavigate","isAuth","getDataFromLS","stateId","useAppSelector","state","favorites","favoritesIds","dispatch","useDispatch","addFavorites","addToFavorites","removeFavorites","removeFromFavorites","RenderFavoritesControlBtn","includes","_jsx","Button","Description","params","useParams","data","isLoading","useGetDescriptionQuery","userId","recipe","cardId","Preloader","_jsxs","className","classes","name","src","image","alt","ingredients","map","item","toString","instructions"],"sourceRoot":""}