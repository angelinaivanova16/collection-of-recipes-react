{"version":3,"file":"static/js/969.32ee8734.chunk.js","mappings":"0JACA,QAAuB,mBAAvB,EAA0D,4BAA1D,EAAkG,wBAAlG,EAAsI,wB,+DCa/H,MAAMA,EAAOC,IAAiC,IAAhC,GAAEC,EAAE,KAAEC,EAAI,MAAEC,GAAcH,EAC7C,MAAMI,GAAUC,EAAAA,EAAAA,IAAeC,GAASA,EAAMC,UAAUC,eAClDC,GAAWC,EAAAA,EAAAA,MAEXC,EAAeA,KACnBF,GAASG,EAAAA,EAAAA,IAAeX,GAAI,EAG9B,IAAIY,EAAkBA,KACpBJ,GAASK,EAAAA,EAAAA,IAAoBb,GAAI,EAGnC,MAAMc,EAA4BA,IAC5BX,EAAQY,SAASf,IACZgB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,QAASN,EAAgBO,SAAC,gBAElCH,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,QAASR,EAAaS,SAAC,aAI1C,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAaH,SAAA,EAC3BC,EAAAA,EAAAA,MAACG,EAAAA,GAAO,CAACC,GAAI,gBAAkBxB,EAAIqB,UAAWC,EAAsBH,SAAA,EAClEH,EAAAA,EAAAA,KAAA,OAAKK,UAAWC,EAAmBG,IAAKvB,EAAOwB,IAAI,eACnDV,EAAAA,EAAAA,KAAA,MAAIK,UAAWC,EAAkBH,SAAElB,QAErCe,EAAAA,EAAAA,KAACF,EAAyB,MACtB,C,+CCxCV,QAA4B,6BAA5B,EAA0E,kC,qDCK1E,MAiCA,EAjCkBa,KAChB,MAAMC,GAAcxB,EAAAA,EAAAA,IAAeC,GAASA,EAAMC,UAAUC,gBACtD,KAAEsB,EAAI,UAAEC,IAAcC,EAAAA,EAAAA,MACtBC,EAAUH,EAEhB,GAAIC,EACF,OAAOd,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,IASnB,IAAIC,EAAiBF,EAAQG,QAAQC,GAC5BR,EAAYb,SAASqB,EAAKpC,MAGnC,OAAI4B,EAAYS,OAAS,GAChBrB,EAAAA,EAAAA,KAAA,KAAGK,UAAWC,EAAuBH,SAAC,qCAG3CH,EAAAA,EAAAA,KAAA,OAAKK,UAAWC,EAAkBH,SAC/Be,EAAeI,KAAKF,IACnBpB,EAAAA,EAAAA,KAAClB,EAAAA,EAAI,CAAkBE,GAAIoC,EAAS,GAAGnC,KAAMmC,EAAW,KAAGlC,MAAOkC,EAAY,OAAnEA,EAAS,OAK5B,C,kCChCK,MACMhC,E,QAAkDmC,E","sources":["webpack://collection-of-recipes-react/./src/componets/cards/card.module.css?22f8","componets/cards/Card.tsx","webpack://collection-of-recipes-react/./src/componets/favorites/favorites.module.css?6fb1","componets/favorites/Favorites.tsx","hooks/hooks.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"card_card__eo0pf\",\"cardContainer\":\"card_cardContainer__hl6LN\",\"cardImage\":\"card_cardImage__Lu9JD\",\"cardTitle\":\"card_cardTitle__H-XMi\"};","import classes from './card.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Button } from '../button/Button';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToFavorites, removeFromFavorites } from '../../redux/favorites-reducer';\r\nimport { useAppSelector } from '../../hooks/hooks';\r\nimport PropTypes from 'prop-types';\r\n\r\ntype Props = {\r\n  id: string;\r\n  name: string;\r\n  image: string;\r\n};\r\n\r\nexport const Card = ({ id, name, image }: Props) => {\r\n  const stateId = useAppSelector(state => state.favorites.favoritesIds);\r\n  const dispatch = useDispatch();\r\n\r\n  const addFavorites = () => {\r\n    dispatch(addToFavorites(id));\r\n  }\r\n\r\n  let removeFavorites = () => {\r\n    dispatch(removeFromFavorites(id));\r\n  }\r\n\r\n  const RenderFavoritesControlBtn = () => {\r\n    if (stateId.includes(id)) {\r\n      return <Button onClick={removeFavorites}>Unfavorite</Button>\r\n    } else {\r\n      return <Button onClick={addFavorites}>Favorite</Button>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.card}>\r\n      <NavLink to={'/description/' + id} className={classes.cardContainer}>\r\n        <img className={classes.cardImage} src={image} alt=\"cardImage\" />\r\n        <h1 className={classes.cardTitle}>{name}</h1>\r\n      </NavLink>\r\n      <RenderFavoritesControlBtn />\r\n    </div>\r\n  )\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  image: PropTypes.string\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"favorites\":\"favorites_favorites__bYYlS\",\"withoutRecipes\":\"favorites_withoutRecipes__b-DWU\"};","import classes from './favorites.module.css';\r\nimport { useGetRecipesQuery } from '../../api/recipesApi';\r\nimport { useAppSelector } from '../../hooks/hooks';\r\nimport { Card } from '../cards/Card';\r\nimport { Preloader } from '../common/Preloader';\r\n\r\nconst Favorites = () => {\r\n  const favoriteIds = useAppSelector(state => state.favorites.favoritesIds);\r\n  const { data, isLoading } = useGetRecipesQuery();\r\n  const recipes = data!;\r\n\r\n  if (isLoading) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  type Props = {\r\n    id: string;\r\n    name: string;\r\n    image: string;\r\n  };\r\n\r\n  let favoritesCards = recipes.filter((item: Props) => {\r\n    return favoriteIds.includes(item.id)\r\n  })\r\n\r\n  if (favoriteIds.length < 1) {\r\n    return <p className={classes.withoutRecipes}>You don't have favorite recipes</p>\r\n  } else {\r\n    return (\r\n      <div className={classes.favorites}>\r\n        {favoritesCards.map((item) => (\r\n          <Card key={item['id']} id={item['id']} name={item['name']} image={item['image']} />\r\n        )\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Favorites;","import { useDispatch, useSelector } from 'react-redux'\r\nimport type { AppDispatch, RootState } from './../redux/store'\r\nimport type { TypedUseSelectorHook } from 'react-redux'\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector"],"names":["Card","_ref","id","name","image","stateId","useAppSelector","state","favorites","favoritesIds","dispatch","useDispatch","addFavorites","addToFavorites","removeFavorites","removeFromFavorites","RenderFavoritesControlBtn","includes","_jsx","Button","onClick","children","_jsxs","className","classes","NavLink","to","src","alt","Favorites","favoriteIds","data","isLoading","useGetRecipesQuery","recipes","Preloader","favoritesCards","filter","item","length","map","useSelector"],"sourceRoot":""}