{"version":3,"file":"static/js/969.9154ed99.chunk.js","mappings":"sKACA,QAAuB,mBAAvB,EAA0D,4BAA1D,EAAkG,wBAAlG,EAAsI,wBCAtI,EAAsB,oB,aCMf,MAAMA,EAASC,IAAmC,IAAlC,QAAEC,EAAO,SAAEC,GAAiBF,EACjD,OACEG,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAaJ,QAASA,EAAQC,SAAEA,GAAkB,E,6BCIlE,MAAMI,EAAON,IAAiC,IAAhC,GAAEO,EAAE,KAAEC,EAAI,MAAEC,GAAcT,EAC7C,MAAMU,GAAUC,EAAAA,EAAAA,IAAeC,GAASA,EAAMC,UAAUC,eAClDC,GAAWC,EAAAA,EAAAA,MAEXC,EAAeA,KACnBF,GAASG,EAAAA,EAAAA,IAAeX,GAAI,EAG9B,IAAIY,EAAkBA,KACpBJ,GAASK,EAAAA,EAAAA,IAAoBb,GAAI,EAGnC,MAAMc,EAA4BA,IAC5BX,EAAQY,SAASf,IACZJ,EAAAA,EAAAA,KAACJ,EAAM,CAACE,QAASkB,EAAgBjB,SAAC,gBAElCC,EAAAA,EAAAA,KAACJ,EAAM,CAACE,QAASgB,EAAaf,SAAC,aAI1C,OAEEqB,EAAAA,EAAAA,MAAA,OAAKnB,UAAWC,EAAaH,SAAA,EAC3BqB,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAI,gBAAkBlB,EAAIH,UAAWC,EAAsBH,SAAA,EAClEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAmBqB,IAAKjB,EAAOkB,IAAI,eACnDxB,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAkBH,SAAEM,QAErCL,EAAAA,EAAAA,KAACkB,EAAyB,MACtB,C,oECxCV,QAA4B,6BAA5B,EAA0E,kC,aCG1E,MA6BA,EA7BkBO,KAChB,MAAMC,GAAclB,EAAAA,EAAAA,IAAeC,GAASA,EAAMC,UAAUC,eAS5D,IAAIgB,GARUnB,EAAAA,EAAAA,IAAeC,GAASA,EAAMmB,MAAMA,QAQvBC,QAAQC,GAC1BJ,EAAYP,SAASW,EAAK1B,MAInC,OAAIsB,EAAYK,OAAS,GAChB/B,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAuBH,SAAC,qCAG3CC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAkBH,SAC/B4B,EAAeK,KAAKF,IACnB9B,EAAAA,EAAAA,KAACG,EAAAA,EAAI,CAAkBC,GAAI0B,EAAS,GAAGzB,KAAMyB,EAAW,KAAGxB,MAAOwB,EAAY,OAAnEA,EAAS,OAK5B,C,iCC1BK,MACMtB,E,KAAkDyB,E","sources":["webpack://collection-of-recipes-react/./src/componets/cards/card.module.css?22f8","webpack://collection-of-recipes-react/./src/componets/button/button.module.css?d151","componets/button/Button.tsx","componets/cards/Card.tsx","webpack://collection-of-recipes-react/./src/componets/favorites/favorites.module.css?6fb1","componets/favorites/Favorites.tsx","hooks/hooks.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"card_card__eo0pf\",\"cardContainer\":\"card_cardContainer__hl6LN\",\"cardImage\":\"card_cardImage__Lu9JD\",\"cardTitle\":\"card_cardTitle__H-XMi\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__kS7IE\"};","import classes from './button.module.css';\r\n\r\ntype Props = {\r\n  children?: React.ReactNode;\r\n  onClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n};\r\n\r\nexport const Button = ({ onClick, children }: Props) => {\r\n  return (\r\n    <button className={classes.btn} onClick={onClick}>{children}</button>\r\n  )\r\n}","import { NavLink } from 'react-router-dom';\r\nimport classes from './card.module.css';\r\nimport { Button } from '../button/Button';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToFavorites, removeFromFavorites } from '../../redux/favorites-reducer';\r\nimport { useAppSelector } from '../../hooks/hooks';\r\n\r\ntype Props = {\r\n  id: string;\r\n  name: string;\r\n  image: string;\r\n};\r\n\r\nexport const Card = ({ id, name, image }: Props) => {\r\n  const stateId = useAppSelector(state => state.favorites.favoritesIds);\r\n  const dispatch = useDispatch();\r\n\r\n  const addFavorites = () => {\r\n    dispatch(addToFavorites(id));\r\n  }\r\n\r\n  let removeFavorites = () => {\r\n    dispatch(removeFromFavorites(id));\r\n  }\r\n\r\n  const RenderFavoritesControlBtn = () => {\r\n    if (stateId.includes(id)) {\r\n      return <Button onClick={removeFavorites}>Unfavorite</Button>\r\n    } else {\r\n      return <Button onClick={addFavorites}>Favorite</Button>\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <div className={classes.card}>\r\n      <NavLink to={'/description/' + id} className={classes.cardContainer}>\r\n        <img className={classes.cardImage} src={image} alt=\"cardImage\" />\r\n        <h1 className={classes.cardTitle}>{name}</h1>\r\n      </NavLink>\r\n      <RenderFavoritesControlBtn />\r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"favorites\":\"favorites_favorites__bYYlS\",\"withoutRecipes\":\"favorites_withoutRecipes__b-DWU\"};","import { useAppSelector } from '../../hooks/hooks';\r\nimport { Card } from '../cards/Card';\r\nimport classes from './favorites.module.css';\r\n\r\nconst Favorites = () => { // Следующим шагом сделаю авторизацию и \"избранное\" закрытым для гостей.\r\n  const favoriteIds = useAppSelector(state => state.favorites.favoritesIds);\r\n  const cards = useAppSelector(state => state.cards.cards);\r\n\r\n  type Props = {\r\n    id: string;\r\n    name: string;\r\n    image: string;\r\n  };\r\n\r\n  let favoritesCards = cards.filter((item: Props) => {\r\n    return favoriteIds.includes(item.id)\r\n  })\r\n\r\n\r\n  if (favoriteIds.length < 1) {\r\n    return <p className={classes.withoutRecipes}>You don't have favorite recipes</p>\r\n  } else {\r\n    return (\r\n      <div className={classes.favorites}>\r\n        {favoritesCards.map((item) => (\r\n          <Card key={item['id']} id={item['id']} name={item['name']} image={item['image']} />\r\n        )\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Favorites;","import { useDispatch, useSelector } from 'react-redux'\r\nimport type { AppDispatch, RootState } from './../redux/store'\r\nimport type { TypedUseSelectorHook } from 'react-redux'\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector"],"names":["Button","_ref","onClick","children","_jsx","className","classes","Card","id","name","image","stateId","useAppSelector","state","favorites","favoritesIds","dispatch","useDispatch","addFavorites","addToFavorites","removeFavorites","removeFromFavorites","RenderFavoritesControlBtn","includes","_jsxs","NavLink","to","src","alt","Favorites","favoriteIds","favoritesCards","cards","filter","item","length","map","useSelector"],"sourceRoot":""}