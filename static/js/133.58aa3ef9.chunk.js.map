{"version":3,"file":"static/js/133.58aa3ef9.chunk.js","mappings":"uKACA,QAA+B,kCAA/B,EAA2E,6BAA3E,EAAoH,+BAApH,EAAsK,sCAAtK,EAAkO,yCAAlO,EAA8R,sCAA9R,EAAqV,oCAArV,EAAsY,gCAAtY,EAAqb,kC,2CCQrb,MAkCA,EAlCoBA,KAClB,MAAMC,GAASC,EAAAA,EAAAA,MAET,KAAEC,EAAI,UAAEC,IAAcC,EAAAA,EAAAA,IAAuBJ,EAAOK,QACpDC,EAASJ,EAEf,OAAIC,GACKI,EAAAA,EAAAA,KAACC,EAAAA,EAAS,KAIjBC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAqBC,SAAA,EACnCL,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAyBC,SAAEN,EAAOO,QACjDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAgBC,SAAA,EAC9BL,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAA0BG,IAAKR,EAAOS,MAAOC,IAAI,eACjEP,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBC,SAAA,EAChCL,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAA4BC,SAAC,kBAC5CL,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAuBC,SACnCN,EAAOW,YAAYC,KAAKC,IACvBZ,EAAAA,EAAAA,KAAA,MAA0BG,UAAWC,EAAmBC,SAAEO,GAAjDA,EAAKC,iBAGlBb,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAA4BC,SAAC,mBAC5CL,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAuBC,SACnCN,EAAOe,aAAaH,KAAKC,IACxBZ,EAAAA,EAAAA,KAAA,MAA0BG,UAAWC,EAAqBC,SAAEO,GAAnDA,EAAKC,wBAKlB,C","sources":["webpack://collection-of-recipes-react/./src/componets/cards/description.module.css?ccc1","componets/cards/Description.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptions\":\"description_descriptions__PwcRk\",\"wrapper\":\"description_wrapper__zOXbu\",\"rightSide\":\"description_rightSide__BdOlD\",\"descriptionTitle\":\"description_descriptionTitle__C6U1G\",\"descriptionSubTitle\":\"description_descriptionSubTitle__q0drU\",\"descriptionImage\":\"description_descriptionImage__nMvR6\",\"ingredientList\":\"description_ingredientList__bxA6v\",\"ingredient\":\"description_ingredient__rSVlK\",\"instructions\":\"description_instructions__gljfk\"};","import classes from './description.module.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useGetDescriptionQuery } from '../../api/recipesApi';\r\nimport { Preloader } from '../common/Preloader';\r\n\r\ntype Params = {\r\n  userId: string;\r\n};\r\n\r\nconst Description = () => {\r\n  const params = useParams() as Params;\r\n\r\n  const { data, isLoading } = useGetDescriptionQuery(params.userId);\r\n  const recipe = data!;\r\n\r\n  if (isLoading) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.descriptions}>\r\n      <h1 className={classes.descriptionTitle}>{recipe.name}</h1>\r\n      <div className={classes.wrapper}>\r\n        <img className={classes.descriptionImage} src={recipe.image} alt=\"cardImage\" />\r\n        <div className={classes.rightSide}>\r\n          <h2 className={classes.descriptionSubTitle}>Ingredients:</h2>\r\n          <ul className={classes.ingredientList}  >\r\n            {recipe.ingredients.map((item: string) => (\r\n              <li key={item.toString()} className={classes.ingredient}>{item}</li>\r\n            ))}\r\n          </ul>\r\n          <h2 className={classes.descriptionSubTitle}>Instructions:</h2>\r\n          <ul className={classes.ingredientList}>\r\n            {recipe.instructions.map((item: string) => (\r\n              <li key={item.toString()} className={classes.instructions}>{item}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Description;"],"names":["Description","params","useParams","data","isLoading","useGetDescriptionQuery","userId","recipe","_jsx","Preloader","_jsxs","className","classes","children","name","src","image","alt","ingredients","map","item","toString","instructions"],"sourceRoot":""}